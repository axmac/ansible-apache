---
- set_fact:
    service_name: 'httpd'
  when: ansible_distribution_major_version == '7'

- set_fact:
    service_name: 'httpd24-httpd'
  when: ansible_distribution_major_version == '6'

- name: Install Apache (Centos7)
  block:
    - package:
        name: "{{ item }}"
        state: latest
      with_items:
        - httpd
        - mod_ssl
  when: ansible_distribution_major_version == '7'

- name: Install Apache (Centos6)
  block:
    - package:
        name: httpd
        state: absent
    - file:
        path: /etc/httpd
        state: absent
    - package:
        name: "{{ item }}"
        state: latest
      with_items:
        - httpd24
        - httpd24-mod_ssl
    - file:
        src: /opt/rh/httpd24/root/etc/httpd
        dest: /etc/httpd
        state: link
    - file:
        src: /opt/rh/httpd24/root/usr/libexec/httpd-ssl-pass-dialog
        dest: /usr/libexec/httpd-ssl-pass-dialog
        state: link
  when: ansible_distribution_major_version == '6'

- name: Ensure default document root
  file:
    path: /var/www/html
    state: directory

- name: Enable service
  service:
    name: "{{ service_name }}"
    enabled: yes

- name: Test for certs directory presence
  tags: certificates
  stat:
    path: "{{ ssl_cert_directory }}"
  register: st
- name: Create directory to store certificates
  tags: certificates
  file:
    path: "{{ ssl_cert_directory }}"
    state: directory
  when: not(st.stat.exists)

- name: Copy CA certificate public key
  tags: certificates
  copy:
    src: "{{ apache_certificates.ca_cert_src }}"
    dest: "{{ apache_certificates_dest.ca_cert }}"
  notify: restart apache

- name: Copy server certificate private key
  tags: certificates
  copy:
    src: "{{ apache_certificates.server_key_src }}"
    dest: "{{ apache_certificates_dest.server_key }}"
  notify: restart apache

- name: Copy server certificate public key
  tags: certificates
  copy:
    src: "{{ apache_certificates.server_cert_src }}"
    dest: "{{ apache_certificates_dest.server_cert }}"
  notify: restart apache

- name: Create apache log directory
  file:
    path: "{{ apache_log_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  notify: restart apache

- name: Apply httpd.conf
  template:
    src: httpd.conf.j2
    dest: "{{ apache_path }}/conf/httpd.conf"
    owner: root
    group: root
    mode: 0644
  notify: restart apache

- name: Apply module load directives
  template:
    src: module.load.j2
    dest: "{{ apache_path }}/conf.d/{{ item.mod_name }}.load"
    owner: root
    group: root
    mode: 0644
  when: (apache_mods is defined) and
        (not(
            (item.mod_path is undefined)
              or (item.mod_path is none)
              or (item.mod_path | trim == '')
              )
          )
  notify: restart apache
  with_items: "{{ apache_mods | default([]) }}"

- name: Apply module conf from files
  copy:
    src: "{{ item.conf_src }}"
    dest: "{{ apache_path }}/conf.d/{{ item.conf_file }}"
    owner: root
    group: root
    mode: 0644
  when: (apache_mods is defined) and
        (not(
            (item.conf_src is undefined)
              or (item.conf_src is none)
              or (item.conf_src | trim == '')
              )
          )
  notify: restart apache
  with_items: "{{ apache_mods | default([]) }}"

- name: Apply module conf from inline content
  template:
    src: module.conf.j2
    dest: "{{ apache_path }}/conf.d/{{ item.conf_file }}"
    owner: root
    group: root
    mode: 0644
  when: (apache_mods is defined) and
        (not(
            (item.conf_content is undefined)
              or (item.conf_content is none)
              or (item.conf_content | trim == '')
              )
          )
  notify: restart apache
  with_items: "{{ apache_mods | default([]) }}"

- name: Apply vhosts
  template:
    src: vhost.conf.j2
    dest: "{{ apache_path }}/conf.d/{{ item.file_name }}"
    owner: root
    group: root
    mode: 0644
  notify: restart apache
  with_items: "{{ apache_virtualhosts }}"

- name: Apply ports.conf
  template:
    src: ports.conf.j2
    dest: "{{ apache_path }}/conf/ports.conf"
    owner: root
    group: root
    mode: 0644
  notify: restart apache
